openapi: 3.0.0
info:
  version: '0.22'
  title: coreBOS API
  description: |
    **core Business Operating System** (coreBOS) is a customizable computer software solution.

    coreBOS is a business empowering tool, an adaptable software program that will help your business accomplish it’s goals. It is a free and open source software application.

    This API will permit you to manage all the information contained in your coreBOS install. You will be able to extract information about the modules and fields the data is structured in and also about all that data and its' relations.

    On the operational side you will be able to trigger workflows and launch operations of various types that can be easily configured inside coreBOS.

    All with the security restrictions established by the coreBOS administrator.
  license:
    name: VPL
servers:
  - url: 'http://localhost/coreBOSTest/webservice.php'
  - url: 'https://demo.corebos.com/webservice.php'
paths:
  /getchallenge:
    $ref: 'paths/getchallenge.yaml#/getchallenge'
  /login:
    $ref: 'paths/login.yaml#/login'
  /extendsession:
    $ref: 'paths/extendsession.yaml#/extendsession'
  /authenticateContact:
    $ref: 'paths/authenticateContact.yaml#/authenticateContact'
  /loginPortal:
    $ref: 'paths/loginPortal.yaml#/loginPortal'
  /changePassword:
    post:
      operationId: changePassword
      summary: 6.- Change a user password
      description: Permits a user to change his password or the password of another user if the connected user is an administrator
      tags:
        - login
      responses:
        '200':
          description: Returns created record or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/changePasswordResponse.yaml#/changePasswordResponse'
                  - $ref: 'components/APIErrors.yaml#/INVALID_USER'
                  - $ref: 'components/APIErrors.yaml#/PASSWORD_NOT_STRONG'
                  - $ref: 'components/APIErrors.yaml#/INVALID_OLD_PASSWORD'
                  - $ref: 'components/APIErrors.yaml#/DATABASE_QUERY_ERROR'
                  - $ref: 'components/APIErrors.yaml#/CHANGE_PASSWORD_FAILURE'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: changePassword
                  example: changePassword
                  description: changePassword
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: web service ID of the user we want to change password
                  example: 19x8
                oldPassword:
                  type: string
                  description: current user password
                  example: strong_password
                newPassword:
                  type: string
                  description: new password
                  example: stronger_password
                confirmPassword:
                  type: string
                  description: new password again
                  example: stronger_password
              required:
                - id
                - oldPassword
                - newPassword
                - confirmPassword
                - operation
                - sessionName
  /changePortalUserPassword:
    post:
      operationId: changePortalUserPassword
      summary: 7.- Change a portal user, contact or employee, password
      description: Permits a portal user to change his password
      tags:
        - login
      responses:
        '200':
          description: true or false depending if the password can be changed or not
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - result
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: boolean
                    example: false
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: changePortalUserPassword
                  example: changePortalUserPassword
                  description: changePortalUserPassword
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                email:
                  type: string
                  description: email of the contact/employee to change
                  example: dr_who@gallifrey.io
                password:
                  type: string
                  description: new password
                  example: stronger_password
                oldpassword:
                  type: string
                  description: current contact/employee password
                  example: strong_password
              required:
                - email
                - password
                - oldPassword
                - operation
                - sessionName
  /changeAccessKey:
    post:
      operationId: changeAccessKey
      summary: 8.- Change a user API Access Key
      description: Permits a user to change his Access Key or the Access Key of another user if the connected user is an administrator
      tags:
        - login
      responses:
        '200':
          description: Returns created record or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/changePasswordResponse.yaml#/changeAccessKeyResponse'
                  - $ref: 'components/APIErrors.yaml#/INVALID_USER'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: changeAccessKey
                  example: changeAccessKey
                  description: changeAccessKey
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: web service ID of the user we want to change access key
                  example: 19x8
              required:
                - id
                - operation
                - sessionName
  /logout:
    $ref: 'paths/logout.yaml#/logout'
  /query:
    $ref: 'paths/query.yaml#/query'
  /create:
    $ref: 'paths/create.yaml#/create'
  /update:
    $ref: 'paths/update.yaml#/update'
  /revise:
    $ref: 'paths/revise.yaml#/revise'
  /retrieve:
    $ref: 'paths/retrieve.yaml#/retrieve'
  /delete:
    $ref: 'paths/delete.yaml#/delete'
  /deleteUser:
    post:
      operationId: deleteUser
      summary: 06.- Eliminate a user
      description: Permits us to delete a user and transfer all his assigned records to another user
      tags:
        - CRUD Operations
      responses:
        '200':
          description: Returns created record or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APILogoutResponse.yaml#/APILogoutResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: deleteUser
                  example: deleteUser
                  description: deleteUser
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: web service ID of the user we want to delete
                  example: 19x8
                newOwnerId:
                  type: string
                  description: web service ID of the user we want to transfer the records to
                  example: 19x1
              required:
                - id
                - newOwnerId
                - operation
                - sessionName
  /addProductImages:
    post:
      operationId: addProductImages
      summary: 07.- Add attachment images to products
      description: Inserts a set of images into the Product multi-image field
      tags:
        - CRUD Operations
      responses:
        '200':
          description: An array with information of the executed operations
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIProductResponse.yaml#/AddImagesGood'
                  - $ref: 'components/APIProductResponse.yaml#/AddImagesBad'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: addProductImages
                  example: addProductImages
                  description: addProductImages
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: Web service ID of the product record to upload the images to
                  example: 14x2408
                files:
                  type: string
                  description: |
                    JSON string of an array of images to upload, each array entry must contain two fields:
                    - name: name of the file to add
                    - content: base64 encoded binary data of the image
                  example: '[{"name": "productimage345", "content": "sll9032ef999..."},...]'
              required:
                - id
                - files
                - operation
                - sessionName
  /addTicketFaqComment:
    post:
      operationId: addTicketFaqComment
      summary: 08.- Add comments to special modules HelpDesk and FAQ
      description: Function used to add comments to Tickets (HelpDesk) and Frequently Asked Questions (Faq)
      tags:
        - CRUD Operations
      responses:
        '200':
          description: An array with information of the record with the new comment
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APICURRResponse.yaml#/APICURRResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIMissingMandatoryFields.yaml#/APIMissingMandatoryFields'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: addTicketFaqComment
                  example: addTicketFaqComment
                  description: addTicketFaqComment
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: Web service ID of the HelpDesk/Faq record to add comments to
                  example: 17x2642
                values:
                  type: string
                  description: |
                    JSON string with the parameters of the comment. these parameters can be:
                    - from_portal: 0/1: 0 = "user", 1 = "customer"
                    - parent_id: webservice id of the contact creating the comment from the portal
                    - comments: string, comment to add
                  example: '{"from_portal": "0", "parent_id": "4x22", "comments": "some comment"}'
              required:
                - id
                - values
                - operation
                - sessionName
  /retrievedocattachment:
    post:
      operationId: retrievedocattachment
      summary: 09.- Return the base64 encoded file attached to the given documents
      description: Obtain information of the attachment of a document without downloading the whole file which would slow many operations
      tags:
        - CRUD Operations
      responses:
        '200':
          description: An object with the information of the attachment for each given ID
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIDocResponse.yaml#/RetrieveDocResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: retrievedocattachment
                  example: retrievedocattachment
                  description: retrievedocattachment
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: A comma-separated list of document identifiers of which we want to get the attachments
                  example: 15x44166,15x44168
                returnfile:
                  type: boolean
                  description: 1 if we want the whole file, 0 if we just want the attachment information
                  example: true
              required:
                - id
                - operation
                - sessionName
  /getProductImages:
    get:
      operationId: getProductImages
      summary: 10.- Retrieve product images
      description: Return an array of images related to the given product
      tags:
        - CRUD Operations
      responses:
        '200':
          description: An object with the information of the images of the given ID
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIDocResponse.yaml#/RetrieveImagesResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getProductImages
          description: getProductImages
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: id
          description: The product record web service ID
          example: 14x2808
          required: true
  /getRecordImages:
    get:
      operationId: getRecordImages
      summary: 11.- Retrieve record images
      description: Retrieve the information of the image attachments of a record
      tags:
        - CRUD Operations
      responses:
        '200':
          description: An object with the information of the images of the given ID
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIDocResponse.yaml#/RetrieveImagesResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getRecordImages
          description: getRecordImages
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: id
          description: The record web service ID
          example: 12x1084
          required: true
  /getRelatedRecords:
    post:
      operationId: getRelatedRecords
      summary: 12.- Retrieve related records
      description: Retrieve the set of related records of a module that belong to any given record. [Additional Information](https://corebos.com/documentation/doku.php?id=en:devel:corebosws:getrelatedrecords)
      tags:
        - CRUD Operations
      responses:
        '200':
          description: Returns set of related records or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIQueryResponse.yaml#/APIQueryResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIErrors.yaml#/OPERATION_NOT_SUPPORTED'
                  - $ref: 'components/APIErrors.yaml#/UNKNOWN_ENTITY'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIErrors.yaml#/MODULES_NOT_RELATED'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getRelatedRecords
                  example: getRelatedRecords
                  description: getRelatedRecords
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: Web service ID corresponding to the main record we want to get the related records from
                  example: 12x44499
                module:
                  type: string
                  description: module name of the Web service ID
                  example: Contacts
                relatedModule:
                  type: string
                  description: The name of the module related to the main module, this represents the type of records to be returned
                  example: HelpDesk
                queryParameters:
                  type: object
                  description: parameters to modify the query and set of returned results in different ways
                  properties:
                    productDiscriminator:
                      type: string
                      description: ProductBundle|ProductParent|ProductLineInvoice{Only}|ProductLineSalesOrder{Only}|ProductLineQuote{Only}|ProductLineAll|ProductLineNone
                      example: ProductLineSalesOrderOnly
                    limit:
                      type: integer
                      description: number of records to return
                      example: 50
                    offset:
                      type: integer
                      description: number of records to jump over before stating to return results (pagination)
                      example: 15
                    orderby:
                      type: string
                      description: a syntactically and semantically correct order by directive wihtout the "order by"
                      example: ticket_title
                    columns:
                      type: string
                      description: a comma separated string of column names that are to be returned
                      example: ticket_title,priority
                    relationtouse:
                      type: string
                      description: label of the relation to select when more than one is found
                    returnattachments:
                      type: boolean
                      description: for Document module will return the file attached if present
                      example: true
              required:
                - id
                - module
                - relatedModule
                - operation
                - sessionName
  /getRelatedRecordsThroughModule:
    post:
      operationId: getRelatedRecordsThroughModule
      summary: 13.- Retrieve related records through another related module
      description: get a list of records related at a second level. [Additional information](http://corebos.com/documentation/doku.php?id=en:devel:corebosws:getrelatedrecords#getrelatedrecordsthroughmodule)'
      tags:
        - CRUD Operations
      responses:
        '200':
          description: Returns set of related records or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIQueryResponse.yaml#/APIQueryResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIErrors.yaml#/OPERATION_NOT_SUPPORTED'
                  - $ref: 'components/APIErrors.yaml#/UNKNOWN_ENTITY'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIErrors.yaml#/MODULES_NOT_RELATED'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getRelatedRecordsThroughModule
                  example: getRelatedRecordsThroughModule
                  description: getRelatedRecordsThroughModule
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: Web service ID corresponding to the main record we want to get the related records from
                  example: 12x44499
                module:
                  type: string
                  description: module name of the Web service ID
                  example: Contacts
                relatedModule:
                  type: string
                  description: The name of the module related to the bridge module, this represents the type of records to be returned
                  example: Projects
                bridgeModule:
                  type: string
                  description: The name of the module related to the main module
                  example: HelpDesk
                queryParameters:
                  type: object
                  description: parameters to modify the query and set of returned results in different ways
                  properties:
                    productDiscriminator:
                      type: string
                      description: ProductBundle|ProductParent|ProductLineInvoice{Only}|ProductLineSalesOrder{Only}|ProductLineQuote{Only}|ProductLineAll|ProductLineNone
                      example: ProductLineSalesOrderOnly
                    limit:
                      type: integer
                      description: number of records to return
                      example: 50
                    offset:
                      type: integer
                      description: number of records to jump over before stating to return results (pagination)
                      example: 15
                    orderby:
                      type: string
                      description: a syntactically and semantically correct order by directive wihtout the "order by"
                      example: ticket_title
                    columns:
                      type: string
                      description: a comma separated string of column names that are to be returned
                      example: ticket_title,priority
                    relationtouse:
                      type: string
                      description: label of the relation to select when more than one is found
                    returnattachments:
                      type: boolean
                      description: for Document module will return the file attached if present
                      example: true
              required:
                - id
                - module
                - relatedModule
                - operation
                - sessionName
  /ValidateInformation:
    post:
      operationId: ValidateInformation
      summary: 14.- Validate record informaton with application rules
      description: Apply application configured validations on a set of fields. [read more](http://corebos.com/documentation/doku.php?id=en:devel:corebosws:methodreference#validateinformation)
      tags:
        - CRUD Operations
      responses:
        '200':
          description: Returns true or false and a set of error messages
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIResponse.yaml#/APIResponseTrue'
                  - $ref: 'components/APIResponse.yaml#/APIResponseValidationFalse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIErrors.yaml#/INVALID_PARAMETER'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: ValidateInformation
                  example: ValidateInformation
                  description: ValidateInformation
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                element:
                  type: string
                  description: JSON string with the field-value pairs to validate. Either a “module” or a “record” entry must exist in the object. If “record” is given the validations will be evaluated with the fields of the record
                  example: '{"id":"12x44499","phone":"123456789"}'
              required:
                - element
                - operation
                - sessionName
  /CreateWithValidation:
    post:
      operationId: CreateWithValidation
      summary: 15.- Validate and create
      description: Validate the information before creating a record
      tags:
        - CRUD Operations
      responses:
        '200':
          description: Returns the created object or false and a set of error messages
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APICURRResponse.yaml#/APICURRResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIMissingMandatoryFields.yaml#/APIMissingMandatoryFields'
                  - $ref: 'components/APIResponse.yaml#/APIResponseValidationFalse'
                  - $ref: 'components/APIErrors.yaml#/INVALID_PARAMETER'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: CreateWithValidation
                  example: CreateWithValidation
                  description: CreateWithValidation
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                elementType:
                  type: string
                  description: Module name where we want to create the record
                  example: Contacts
                element:
                  type: string
                  description: JSON string with all the field-value entries to save
                  example: '{"firstname":"River","lastname":"Song","assigned_user_id":"19x5"}'
              required:
                - elementType
                - element
                - operation
                - sessionName
  /UpdateWithValidation:
    post:
      operationId: UpdateWithValidation
      summary: 16.- Validate and update (with all mandatory)
      description: Validate the information before updating a record
      tags:
        - CRUD Operations
      responses:
        '200':
          description: Returns the updated object or false and a set of error messages
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APICURRResponse.yaml#/APICURRResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIMissingMandatoryFields.yaml#/APIMissingMandatoryFields'
                  - $ref: 'components/APIResponse.yaml#/APIResponseValidationFalse'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIErrors.yaml#/INVALID_PARAMETER'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: UpdateWithValidation
                  example: UpdateWithValidation
                  description: UpdateWithValidation
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                element:
                  type: string
                  description: JSON string with all the field-value entries to save
                  example: '{"firstname":"River","lastname":"Song","assigned_user_id":"19x5"}'
              required:
                - element
                - operation
                - sessionName
  /ReviseWithValidation:
    post:
      operationId: ReviseWithValidation
      summary: 17.- Validate and update fields
      description: Validate the information before updating a record
      tags:
        - CRUD Operations
      responses:
        '200':
          description: Returns the updated object or false and a set of error messages
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APICURRResponse.yaml#/APICURRResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIResponse.yaml#/APIResponseValidationFalse'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIErrors.yaml#/INVALID_PARAMETER'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: ReviseWithValidation
                  example: ReviseWithValidation
                  description: ReviseWithValidation
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                element:
                  type: string
                  description: JSON string with all the field-value entries to save
                  example: '{"firstname":"River","lastname":"Song","assigned_user_id":"19x5"}'
              required:
                - element
                - operation
                - sessionName
  /MassCreate:
    post:
      operationId: MassCreate
      summary: 01.- Create a set of records
      description: Create many records and establish relationships among the different records in one call
      tags:
        - CRUD Mass Operations
      responses:
        '200':
          description: |
            An object with two elements:
            - success_creates: array of created Object
            - failed_creates: array of records that could not be created with their error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "true"
                    example: true
                  result:
                    type: object
                    description: JSON object of the created records indexed by their web service ID
                    properties:
                      success_creates:
                        type: array
                        description: array of created records
                        items: {}
                      failed_creates:
                        type: array
                        description: array of records that could not be created with their error message
                        items: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: MassCreate
                  example: MassCreate
                  description: MassCreate
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                elements:
                  type: string
                  description: |
                    JSON string with all the records and field-value entries to create

                    [Read about the suppported format in the documentation](https://corebos.com/documentation/doku.php?id=en:devel:corebosws:methodreference#crud_mass_operations)
              required:
                - elements
                - operation
                - sessionName
  /MassRetrieve:
    post:
      operationId: MassRetrieve
      summary: 02.- Retrieve a set of records
      description: Retrieve a set of records at once reducing the number of calls to the API
      tags:
        - CRUD Mass Operations
      responses:
        '200':
          description: array of retrieved records
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                    description: "true"
                    example: true
                  result:
                    type: object
                    description: JSON object of the retrieved records indexed by their web service ID
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: MassRetrieve
                  example: MassRetrieve
                  description: MassRetrieve
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                ids:
                  type: string
                  description: comma-separated string with all the record IDs to retrieve
                  example: 12x1084,11x74
              required:
                - ids
                - operation
                - sessionName
  /MassUpdate:
    post:
      operationId: MassUpdate
      summary: 03.- Update a set of records
      description: Update a set of records at once as a single group
      tags:
        - CRUD Mass Operations
      responses:
        '200':
          description: |
            An object with two elements:
            - success_updates: array of updated records
            - failed_updates: array of records that could not be updated with their error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "true"
                    example: true
                  result:
                    type: object
                    description: JSON object of the updated records indexed by their web service ID
                    properties:
                      success_updates:
                        type: array
                        description: array of updated records
                        items: {}
                      failed_updates:
                        type: array
                        description: array of records that could not be updated with their error message
                        items: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: MassUpdate
                  example: MassUpdate
                  description: MassUpdate
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                elements:
                  type: string
                  description: |
                    JSON string with all the records and field-value entries to update

                    [Read about the suppported format in the documentation](https://corebos.com/documentation/doku.php?id=en:devel:corebosws:methodreference#crud_mass_operations)
              required:
                - elements
                - operation
                - sessionName
  /MassDelete:
    post:
      operationId: MassDelete
      summary: 04.- Delete a set of records
      description: Delete a set of records at once as a group
      tags:
        - CRUD Mass Operations
      responses:
        '200':
          description: |
            An object with two elements:
            - success_deletes: array of deleted records
            - failed_deletes: array of records that could not be deleted with their error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "true"
                    example: true
                  result:
                    type: object
                    description: JSON object of the deleted records
                    properties:
                      success_deletes:
                        type: array
                        description: array of deleted records
                        items: {}
                      failed_deletes:
                        type: array
                        description: array of records that could not be deleted with their error message
                        items: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: MassDelete
                  example: MassDelete
                  description: MassDelete
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                ids:
                  type: string
                  description: comma-separated string with all the record IDs to delete
                  example: 12x1085,11x78
              required:
                - ids
                - operation
                - sessionName
  /upsert:
    post:
      operationId: Upsert
      summary: 05.- Search and update/create a set of records
      description: The upsert method will permit us to execute a search on some fields in a module and mass update/create records in one call. [Additional information](http://corebos.com/documentation/doku.php?id=en:devel:corebosws:methodreference#upsert)'
      tags:
        - CRUD Mass Operations
      responses:
        '200':
          description: |
            An object with two elements:
            - success_creates: array of upserted records
            - failed_creates: array of records that could not be upserted with their error message
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "true"
                    example: true
                  result:
                    type: object
                    description: JSON object of the upserted records indexed by their web service ID
                    properties:
                      success_creates:
                        type: array
                        description: array of upserted records
                        items: {}
                      failed_creates:
                        type: array
                        description: array of records that could not be upserted with their error message
                        items: {}
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: MassCreate
                  example: MassCreate
                  description: MassCreate **Note:** there is no upsert operation, [MassCreate](#post-/MassCreate) supports upsert natively
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                elements:
                  type: string
                  description: |
                    JSON string with all the records and field-value entries to create

                    [Read about the suppported format in the documentation](https://corebos.com/documentation/doku.php?id=en:devel:corebosws:methodreference#crud_mass_operations)
              required:
                - elements
                - operation
                - sessionName
  /SetRelation:
    post:
      operationId: SetRelation
      summary: Establish relations between one record and a set of other records
      description: Establish a direct relationship between records in two different modules
      tags:
        - Relation Operations
      responses:
        '200':
          description: Returns true or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIResponse.yaml#/APIResponseTrue'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: SetRelation
                  example: SetRelation
                  description: SetRelation
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                relate_this_id:
                  type: string
                  description: Web service ID of the main record to relate
                  example: 12x1084
                with_these_ids:
                  type: string
                  description: JSON encoded array of web service IDs to relate to the main record
                  example: '["14x11","15x1"]'
              required:
                - operation
                - sessionName
                - relate_this_id
                - with_these_ids
  /UnsetRelation:
    post:
      operationId: UnsetRelation
      summary: Unbind the relation between records
      description: Deletes relations between one record and a set of other records
      tags:
        - Relation Operations
      responses:
        '200':
          description: Returns true or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIResponse.yaml#/APIResponseTrue'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIErrors.yaml#/INVALID_ID_ATTRIBUTE'
                  - $ref: 'components/APIErrors.yaml#/RECORD_NOT_FOUND'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: SetRelation
                  example: SetRelation
                  description: SetRelation
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                unrelate_this_id:
                  type: string
                  description: Web service ID of the main record to unrelate
                  example: 12x1084
                with_these_ids:
                  type: string
                  description: JSON encoded array of web service IDs to relate to the main record
                  example: '["14x11","15x1"]'
              required:
                - operation
                - sessionName
                - unrelate_this_id
                - with_these_ids
  /listtypes:
    $ref: 'paths/listtypes.yaml#/listtypes'
  /describe:
    $ref: 'paths/describe.yaml#/describe'
  /getfilterfields:
    post:
      operationId: getfilterfields
      summary: 03.- Default list fields to represent a row of a module
      description: Retrieve the default list of fields to show in a list view along with the link field and pagesize
      tags:
        - Metadata information
      responses:
        '200':
          description: Returns updated record or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIResponse.yaml#/FilterFields'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getfilterfields
                  example: getfilterfields
                  description: getfilterfields
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                module:
                  type: string
                  description: Module name to get the fields for
                  example: Contacts
              required:
                - module
                - operation
                - sessionName
  /getViewsByModule:
    get:
      operationId: getViewsByModule
      summary: 04.- Available filters of a module
      description: Retrieve a list of available filters on a module with all the available information. [Additional information](http://corebos.com/documentation/doku.php?id=en:devel:corebosws:methodreference&#getviewsbymodule)
      tags:
        - Metadata information
      responses:
        '200':
          description: Returns information of filters in the module or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIResponse.yaml#/FilterInfoResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
                  - $ref: 'components/APIErrors.yaml#/INVALID_MODULE'
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getViewsByModule
          description: getViewsByModule
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: module
          example: Accounts
          description: module for which we want filter information
          required: true
  /getFiltersByModule:
    post:
      operationId: getFiltersByModule
      summary: 05.- Available filters of a module with HTML output
      description: |
        The same as [getViewsByModule](#get-/getViewsByModule) plus an HTML select element to pick the filters from
      tags:
        - Metadata information
      responses:
        '200':
          description: Returns information of filters in the module or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIResponse.yaml#/FilterInfoHTMLResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getFiltersByModule
                  example: getFiltersByModule
                  description: regetFiltersByModulevise
                sessionName:
                  type: string
                  example: 3fde6cf960edb4e9e91e3
                  description: active session ID
                module:
                  type: string
                  description: module for which we want filter information
                  example: Accounts
              required:
                - module
                - operation
                - sessionName
  /getPortalUserInfo:
    post:
      operationId: getPortalUserInfo
      summary: 09.- Metadata of the connected portal user
      description: Retrieve a list of available fields for the connected user
      tags:
        - Metadata information
      responses:
        '200':
          description: connected user fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: object
                    properties:
                      date_format:
                        type: string
                        example: yyyy-mm-dd
                      first_name:
                        type: string
                        example:
                      last_name:
                        type: string
                        example: Administrator
                      email1:
                        type: string
                        example: noreply@tsolucio.com
                      is_admin:
                        type: string
                        example: on
                      roleid:
                        type: string
                        example: H2
                      rolename:
                        type: string
                        example: CEO
                      language:
                        type: string
                        example: en_us
                      currency_grouping_pattern:
                        type: string
                        example: 123,456,789
                      currency_decimal_separator:
                        type: string
                        example: .
                      currency_grouping_separator:
                        type: string
                        example: ','
                      currency_symbol_placement:
                        type: string
                        example: $1.0
                      id:
                        type: string
                        example: 19x1
                required:
                  - success
                  - result
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getPortalUserInfo
                  example: getPortalUserInfo
                  description: getPortalUserInfo
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
              required:
                - operation
                - sessionName
  /getPortalUserDateFormat:
    post:
      operationId: getPortalUserDateFormat
      summary: 10.- Connected portal user date format
      description: Retrieve the date format of the connected user
      tags:
        - Metadata information
      responses:
        '200':
          description: connected user date format
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                      type: string
                      example: yyyy-mm-dd
                required:
                  - success
                  - result
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getPortalUserDateFormat
                  example: getPortalUserDateFormat
                  description: getPortalUserDateFormat
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
              required:
                - operation
                - sessionName
  /getAllUsers:
    get:
      operationId: getAllUsers
      summary: 06.- Retrieve all user names
      description: Retrieve a list of all existing users names
      tags:
        - Metadata information
      responses:
        '200':
          description: relation of all user names in the application
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: object
                    properties:
                      userid:
                        type: string
                        example: Clara Oswald
                required:
                  - success
                  - result
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getAllUsers
          description: getAllUsers
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
  /getAssignedUserList:
    get:
      operationId: getAssignedUserList
      summary: 07.- Retrieve all users with access to a module
      description: Retrieve a list of all users with access to a module
      tags:
        - Metadata information
      responses:
        '200':
          description: relation of all user names with access to the given module
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: array
                    description: user id and name with access to the module
                    items:
                      type: object
                      properties:
                        userid:
                          type: string
                          example: 19x2
                        username:
                          type: string
                          example: Clara Oswald
                required:
                  - success
                  - result
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getAssignedUserList
          description: getAssignedUserList
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: module
          description: Module name to get the users for
          example: Contacts
          required: true
  /getUsersInSameGroup:
    post:
      operationId: getUsersInSameGroup
      summary: 08.- Retrieve all users who share a group with the given user
      description: Return all the users in the groups that the given user is part of
      tags:
        - Metadata information
      responses:
        '200':
          description: relation of all user names in the application
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: object
                    properties:
                      userid:
                        type: string
                        example: Clara Oswald
                required:
                  - success
                  - result
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getUsersInSameGroup
                  example: getUsersInSameGroup
                  description: getUsersInSameGroup
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  example: 5
                  description: user id of shared group. **Note:** this endpoint uses normal user ID, not web service ID
              required:
                - operation
                - sessionName
  /getReferenceValue:
    post:
      operationId: getReferenceValue
      summary: Convert record IDs into their representative entity names
      description: Convert web service IDs into their entity names. This method has lost a lot of importance now that [Retrieve](#get-/retrieve) returns this information directly
      tags:
        - Other Information
      responses:
        '200':
          description: PHP serialzed relation of entity names of the given records
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: object
                    properties:
                      recordid:
                        type: object
                        description: reference record information in PHP serialzed format
                        properties:
                          module:
                            type: string
                            description: name of the module of the record
                            example: Accounts
                          reference:
                            type: string
                            description: entity name of the record
                            example: Chemex Labs
                          cbuuid:
                            type: string
                            description: coreBOS UUID of the record
                            example: a609725772dc91ad733b19e4100cf68bb30195d1
                required:
                  - success
                  - result
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getReferenceValue
                  example: getReferenceValue
                  description: getReferenceValue
                sessionName:
                  type: string
                  example: 3fde6cf960edb4e9e91e3
                  description: active session ID
                id:
                  type: string
                  description: PHP serialzed array of web service IDs to convert
                  example: 'a:2:{i:0;s:7:"12x1084";i:1;s:5:"11x75";}'
              required:
                - id
                - operation
                - sessionName
  /getModulePermissionQuery:
    get:
      operationId: getModulePermissionQuery
      summary: coreBOS restriction SQL commands
      description: Returns SQL query restrictions that must be applied to enforce application permissions. [Additional information](http://corebos.com/documentation/doku.php?id=en:devel:corebosws:methodreference#getmodulepermissionquery)'
      tags:
        - Other Information
      responses:
        '200':
          description: object with the SQL restrictions or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIResponse.yaml#/PermissionQueryResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getModulePermissionQuery
          description: getModulePermissionQuery
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: module
          example: Accounts
          description: module name for which we need the SQL restrictions
          required: true
  /getPicklistValues:
    post:
      operationId: getPicklistValues
      summary: Retrieve module picklist metadata
      description: Get picklist fields for the given module and all their possible values
      tags:
        - Other Information
      responses:
        '200':
          description: PHP serialzed array of picklist fields and their information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: string
                    description: reference record information in PHP serialzed format
                    example: 'a:4:{s:6:"glacct";a:9:{s:18:"300-Sales-Software";s:18:"300-Sales-Software";s:18:"301-Sales-Hardware";s:18:"301-Sales-Hardware";s:17:"302-Rental-Income";s:17:"302-Rental-Income";s:19:"303-Interest-Income";s:19:"303-Interest-Income";s:26:"304-Sales-Software-Support";s:26:"304-Sales-Software-Support";s:15:"305-Sales Other";s:15:"305-Sales Other";s:18:"306-Internet Sales";s:18:"306-Internet Sales";s:26:"307-Service-Hardware Labor";s:26:"307-Service-Hardware Labor";s:15:"308-Sales-Books";s:15:"308-Sales-Books";}s:12:"manufacturer";a:4:{s:8:"--None--";s:8:"--None--";s:14:"AltvetPet Inc.";s:14:"AltvetPet Inc.";s:11:"LexPon Inc.";s:11:"LexPon Inc.";s:12:"MetBeat Corp";s:12:"MetBeat Corp";}s:15:"productcategory";a:4:{s:8:"--None--";s:8:"--None--";s:8:"Hardware";s:8:"Hardware";s:8:"Software";s:8:"Software";s:16:"CRM Applications";s:16:"CRM Applications";}s:9:"usageunit";a:16:{s:3:"Box";s:3:"Box";s:6:"Carton";s:6:"Carton";s:5:"Dozen";s:5:"Dozen";s:4:"Each";s:4:"Each";s:5:"Hours";s:5:"Hours";s:11:"Impressions";s:11:"Impressions";s:2:"Lb";s:2:"Lb";s:1:"M";s:1:"M";s:4:"Pack";s:4:"Pack";s:5:"Pages";s:5:"Pages";s:6:"Pieces";s:6:"Pieces";s:8:"Quantity";s:8:"Quantity";s:5:"Reams";s:5:"Reams";s:5:"Sheet";s:5:"Sheet";s:13:"Spiral Binder";s:13:"Spiral Binder";s:5:"Sq Ft";s:5:"Sq Ft";}}'
                required:
                  - success
                  - result
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getPicklistValues
                  example: getPicklistValues
                  description: getPicklistValues
                sessionName:
                  type: string
                  example: 3fde6cf960edb4e9e91e3
                  description: active session ID
                module:
                  type: string
                  description: name of the module for which we want to retrieve the picklist values
                  example: Products
              required:
                - module
                - operation
                - sessionName
  /gettranslation:
    post:
      operationId: gettranslation
      summary: Translate strings using coreBOS
      description: This method permits us to use the translations in the application in our frontend application
      tags:
        - Other Information
      responses:
        '200':
          description: object with key-translation
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: object
                    description: key-translation
                    properties:
                      key:
                        type: string
                required:
                  - success
                  - result
              examples:
                example-1:
                  value:
                    success: true
                    result:
                      Accounts: Cuentas
                      LBL_LIST_ACCOUNT_NAME: Cuentas
                      Portal User: Usuario de Portal
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: gettranslation
                  example: gettranslation
                  description: gettranslation
                sessionName:
                  type: string
                  example: 3fde6cf960edb4e9e91e3
                  description: active session ID
                totranslate:
                  type: string
                  description: JSON encoded object with the keys to translate, if it is an array an array will be returned
                  example: '{"Accounts":"Accounts","LBL_LIST_ACCOUNT_NAME":"LBL_LIST_ACCOUNT_NAME","Client Portal User":"Client Portal User"}'
                language:
                  type: string
                  description: valid application language identifier
                  example: es_es
                module:
                  type: string
                  description: module to start the translations from
                  example: Contacts
              required:
                - operation
                - sessionName
                - totranslate
                - language
                - module
  /getFieldAutocomplete:
    get:
      operationId: getFieldAutocomplete
      summary: Autocomplete service
      description: |
        Executes a search in the list of fields of a module for the given term with the selected operator and returns the values of the indicated fields for the records found

        This method permits us to create the typical "fill in as you type" functionality. [Read how to do it here](https://corebos.com/documentation/doku.php?id=en:devel:corebosws:manual:autocomplete)
      tags:
        - Other operations
      responses:
        '200':
          description: array of objects with results of the search and their record ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: array
                    description: array of search results
                    items:
                      properties:
                        crmid:
                          type: string
                          description: internal ID of the record found
                        crmfields:
                          type: object
                          description: requested field values
                          properties:
                            fieldname:
                              type: string
                              example: fieldvalue
                required:
                  - success
                  - result
              examples:
                example-1:
                  value:
                    success: true
                    result:
                      - crmid: 14x8381
                        crmfields:
                          productname: Cooking pads
                          vendor_part_no: '12'
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getFieldAutocomplete
          description: getFieldAutocomplete
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: term
          description: search term
          example: ch
          required: true
        - schema:
            type: string
          in: query
          name: filter
          description: Operator to use eq, neq, startswith, endswith, contains
          example: contains
          required: true
        - schema:
            type: string
          in: query
          name: searchinmodule
          description: module name to search in
          required: true
          example: Accounts
        - schema:
            type: string
          in: query
          name: fields
          description: Comma-separated list of fields to search in
          required: true
          example: accountname,industry
        - schema:
            type: string
          in: query
          name: returnfields
          description: Comma-separated list of fields to return as result, if empty the fields in the fields parameter will be returned
          required: true
        - schema:
            type: integer
          in: query
          name: limit
          description: maximum number of values to return
          example: 50
          required: true
  /getReferenceAutocomplete:
    get:
      operationId: getReferenceAutocomplete
      summary: Autocomplete service using reference fields
      description: |
        Executes a search in the entity fields of the given modules for the given term with the selected operator and returns the reference value

        This method permits us to create the typical "fill in as you type" functionality. [Read how to do it here](https://corebos.com/documentation/doku.php?id=en:devel:corebosws:manual:autocomplete)
      tags:
        - Other operations
      responses:
        '200':
          description: array of objects with results of the search and their record ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: array
                    description: array of search results
                    items:
                      properties:
                        crmid:
                          type: string
                          description: internal ID of the record found
                        crmmodule:
                          type: string
                          description: internal module name of the record found
                        crmname:
                          type: string
                          description: reference value of the record
                required:
                  - success
                  - result
              examples:
                example-1:
                  value:
                    success: true
                    result:
                      - crmid: 14x8381
                        crmname: Cooking pads
                        crmmodule: Products
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getReferenceAutocomplete
          description: getReferenceAutocomplete
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: term
          description: search term
          example: ch
          required: true
        - schema:
            type: string
          in: query
          name: filter
          description: Operator to use eq, neq, startswith, endswith, contains
          example: contains
          required: true
        - schema:
            type: string
          in: query
          name: searchinmodules
          description: Comma-separated list of modules to search in
          required: true
          example: Accounts,Contacts
        - schema:
            type: integer
          in: query
          name: limit
          description: maximum number of values to return
          example: 50
          required: true
  /convertlead:
    post:
      operationId: ConvertLead
      summary: Convert Leads to other entities
      description: Permits the conversion of a lead into an account, contact and potential. This service is used by the application itself when converting leads
      tags:
        - Other operations
      responses:
        '200':
          description: array of objects with results of the search and their record ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: array
                    description: array with all the information of the new objects created
                required:
                  - success
                  - result
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: convertlead
                  example: convertlead
                  description: convertlead
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: JSON string with all the information to convert the lead that you can [find here](https://corebos.com/documentation/doku.php?id=en:devel:corebosws:convertleadwebservice)
              required:
                - id
                - operation
                - sessionName
  /SearchGlobalVar:
    get:
      operationId: SearchGlobalVar
      summary: Get the value of global variables
      description: Retrieve the value of an application global variable. [Additional information](http://corebos.com/documentation/doku.php?id=en:devel:corebosws:methodreference#searchglobalvar)
      tags:
        - Other Information
      responses:
        '200':
          description: value of the global variable in the context of the given parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: string
                    description: value of the global variable, if it is a business map an object with the ID and map in JSON format will be returned
                required:
                  - success
                  - result
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: SearchGlobalVar
          description: SearchGlobalVar
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: gvname
          description: Name of the global variable
          example: Application_ListView_PageSize
          required: true
        - schema:
            type: string
          in: query
          name: defaultvalue
          description: Default value to be returned if not found
          example: 33
          required: true
        - schema:
            type: string
          in: query
          name: gvmodule
          description: Module context to be searched in
          example: Assets
          required: true
  /getLoginPage:
    get:
      operationId: getLoginPage
      summary: Get the HTML of a login page
      description: retrieve the HTML of a coreBOS login screen
      tags:
        - Other Information
      responses:
        '200':
          description: retrieve the HTML of a coreBOS login screen
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: string
                    description: HTML of the login screen
                required:
                  - success
                  - result
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getLoginPage
          description: getLoginPage
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
        - schema:
            type: string
          in: query
          name: template
          description: login template to retrieve
          example: ldsnoimage
          required: true
        - schema:
            type: string
          in: query
          name: language
          description: the language we want the page in
          example: es_es
          required: true
        - schema:
            type: boolean
          in: query
          name: csrf
          description: if the HTML should in CSRF control code
          example: false
          required: true
  /getSearchResults:
    post:
      operationId: getSearchResults
      summary: WIP Launch a global search in the application
      description: Search for a term in a set of modules
      tags:
        - Other operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  description: The operation name.
                sessionName:
                  type: string
                  description: The session ID
                workflow:
                  type: string
                  description: Workflow.
                entities:
                  type: string
                  description: Entities to execute workflow.
              required:
                - operation
                - sessionName
                - workflow
                - entities
            examples:
              example-1:
                value:
                  operation: getSearchResults
                  sessionName: 5d9d39e2601060bdacb72
                  workflow: '27'
                  entities: '["17x2642"]'
  /ExecuteWorkflow:
    post:
      operationId: ExecuteWorkflow
      summary: WIP Execute a workflow with given records
      description: Execute workflow
      tags:
        - Other operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  description: The operation name.
                sessionName:
                  type: string
                  description: The session ID
                workflow:
                  type: string
                  description: Workflow.
                entities:
                  type: string
                  description: Entities to execute workflow.
              required:
                - operation
                - sessionName
                - workflow
                - entities
            examples:
              example-1:
                value:
                  operation: ExecuteWorkflow
                  sessionName: 5d9d39e2601060bdacb72
                  workflow: '27'
                  entities: '["17x2642"]'
  /cbQuestionAnswer:
    get:
      operationId: QuestionAnswer
      summary: WIP Execute Question and get the answers
      description: Get questions and answers by Id.
      tags:
        - Other operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      parameters:
        - schema:
            type: string
          in: query
          name: sessionName
          description: The session Id of the logged in user.
          required: true
        - schema:
            type: string
          in: query
          name: qid
          description: Question reference Id.
          required: true
        - schema:
            type: string
          in: query
          name: operation
          description: The operation name.
          required: true
  /cbRule:
    get:
      operationId: Rules
      summary: WIP Execute coreBOS Rules
      description: To execute a decision map and get the result we use the coreBOS Rules service. coreBOS Rule will see that the given map is actually a decision table and will evaluate the map with the given context.
      tags:
        - Other operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      parameters:
        - schema:
            type: string
          in: query
          name: sessionName
          description: The session Id of the user.
          required: true
        - schema:
            type: string
          in: query
          name: conditionid
          description: RACRulePermittedCheck.
          required: true
        - schema:
            type: array
          in: query
          name: context
          description: An array of the context variables about the rule.
          required: true
        - schema:
            type: string
          in: query
          name: operation
          description: The operation name.
          required: true
  /getEntityNum:
    post:
      operationId: getEntityNum
      summary: Returns auto-numeric field prefix information for each module
      description: Get the auto numeric field prefixes of all modules with a uitype 4 field.
      tags:
        - Other Information
      responses:
        '200':
          description: module auto-numeric prefixes or error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: object
                    description: list of module and their prefixes
                    example: {
                      "Leads":["LEA"],
                      "Accounts":["ACC"],
                      "Campaigns":["CAM"]
                    }
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getEntityNum
                  example: getEntityNum
                  description: getEntityNum
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
              required:
                - operation
                - sessionName
  /jsLog:
    post:
      operationId: jsLog
      summary: Logging from javascript to backend
      description: The jsLog endpoint permits us to send any message from javascript to our coreBOS backend
      tags:
        - Other operations
      responses:
        '200':
          description: this endpoint returns an empty result or error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  success:
                    type: boolean
                    description: "true"
                    example: true
                  result:
                    type: boolean
                    example: null
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: jsLog
                  example: jsLog
                  description: jsLog
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                level:
                  type: string
                  description: coreBOS logging level
                  example: FATAL
                message:
                  type: string
                  description: The string to write in the log if the given level is matched
                  example: some variable value
              required:
                - operation
                - sessionName
                - level
                - message
  /sync:
    $ref: 'paths/sync.yaml#/sync'
  /gendoc_convert:
    post:
      operationId: GenDocConversion
      summary: Convert documents using unoconv service
      description: Allows a web service client to send an OpenOffice/LibreOffice document for it to be converted into any format supported by unoconv and retrieve the resulting file
      tags:
        - Document Generation
      responses:
        '200':
          description: Return a set of records or error object
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIDocResponse.yaml#/ConvertFileResponse'
                  - $ref: 'components/APIDocResponse.yaml#/ConvertErrorResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: gendoc_convert
                  example: gendoc_convert
                  description: gendoc_convert
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                file:
                  type: object
                  description: file to convert
                  properties:
                    name:
                      type: string
                      description: file name
                      example: mydocument.odt
                    size:
                      type: integer
                      description: size of the file in bytes
                      example: 98735
                    type:
                      type: string
                      description: file mime type
                      example: application/odt
                    content:
                      type: string
                      description: "base64 encoded file contents"
                      example: "base64 encoded file contents"
                  example: {
                    name: file_name,
                    size: 345,
                    type: odt,
                    content: "base64 encoded file contents"
                  }
                convert_format:
                  type: string
                  description: format to convert input file
                  example: html
              required:
                - file
                - convert_format
                - operation
                - sessionName
  /getmergedtemplate:
    get:
      operationId: getMergedTemplate
      summary: Merge records with GenDoc template
      description: Get the binary representation of a template with records from a GenDoc supported module.
      tags:
        - Document Generation
      responses:
        '200':
          description: Return a set of records or error object
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIDocResponse.yaml#/GenDocFileResponse'
                  - $ref: 'components/APIDocResponse.yaml#/GenDocErrorResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getmergedtemplate
          description: getmergedtemplate
          required: true
        - schema:
            type: string
          in: query
          name: template
          example: 18x1393
          description: document web service ID that contains the template to merge
          required: true
        - schema:
            type: string
          in: query
          name: crmids
          example: 11x74,11x75
          description: comma-separated list of records to merge with the template
          required: true
        - schema:
            type: string
          in: query
          name: output_format
          example: onepdf
          description: |
            format of the final document
            - pdf: PDF files
            - odt: ODT files
            - onepdf: all the merged templates for each CRMID joined in one PDF file
            - oneodt: all the merged templates for each CRMID joined in one ODT file
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
  /getpdfdata:
    post:
      operationId: getPDFdata
      summary: Generate application PDF of a record
      description: |
        Get the PDF representation of an inventory or supported module records.

        There are a set of global variables that govern how this method works:
        - CustomerPortal_PDF_Modules – global variable defines more modules supported by this endpoint.
        - CustomerPortal_PDF – global variable defines how to get the PDF: PDFMaker, GenDoc, or Native
        - CustomerPortal_PDFTemplate_{module} – defines the templateID to use for GenDoc and PDFMaker
      tags:
        - Document Generation
      responses:
        '200':
          description: PDF output of record or error
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/APIDocResponse.yaml#/APIDocResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getpdfdata
                  example: getpdfdata
                  description: getpdfdata
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                id:
                  type: string
                  description: web service ID of a record in a supported module
                  example: 23x999
              required:
                - id
                - operation
                - sessionName
  /getRelatedModulesInfomation:
    post:
      operationId: getRelatedModulesInfomation
      summary: Returns metadata information about related modules
      description: Returns an array of metadata information about the modules related to the given module.
      tags:
        - Other Information
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getRelatedModulesInfomation
                  example: getRelatedModulesInfomation
                  description: getRelatedModulesInfomation
                sessionName:
                  type: string
                  example: 3fde6cf960edb4e9e91e3
                  description: active session ID
                module:
                  type: string
                  description: Name of the main module we want to get the relations of
                  example: Contacts
              required:
                - module
                - operation
                - sessionName
      responses:
        '200':
          description: array of related module information
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/DescribeResponse.yaml#/DescribeResponse/properties/result/properties/relatedModules'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
  /getRelatedModulesManytoOne:
    get:
      operationId: getRelatedModulesManytoOne
      summary: Returns metadata information about N:1 related modules
      description: Returns an array of metadata information about the modules related to the given module in N:1 mode.
      tags:
        - Other Information
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: getRelatedModulesManytoOne
          description: getRelatedModulesManytoOne
          required: true
        - schema:
            type: string
          in: query
          name: module
          example: Contacts
          description: main module of relations
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
      responses:
        '200':
          description: Return array of related module information
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/GetRelatedXYResponse.yaml#/GetRelatedXYResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
  /GetRelatedModulesOneToMany:
    get:
      operationId: GetRelatedModulesOneToMany
      summary: Returns metadata information about 1:N related modules
      description: Returns an array of metadata information about the modules related to the given module in 1:N mode.
      tags:
        - Other Information
      parameters:
        - schema:
            type: string
          in: query
          name: operation
          example: GetRelatedModulesOneToMany
          description: GetRelatedModulesOneToMany
          required: true
        - schema:
            type: string
          in: query
          name: module
          example: Contacts
          description: main module of relations
          required: true
        - schema:
            type: string
          in: query
          name: sessionName
          example: 3fde6cf960edb4e9e91e3
          description: The session ID
          required: true
      responses:
        '200':
          description: Return array of related module information
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: 'components/GetRelatedXYResponse.yaml#/GetRelatedXYResponse'
                  - $ref: 'components/APISessionError.yaml#/APISessionError'
                  - $ref: 'components/APIAccessDenied.yaml#/APIAccessDenied'
  /findByPortalUserName:
    post:
      operationId: findByPortalUserName
      summary: Search if a portal user exists
      description: Returns if a portal user with the given name exists or not
      tags:
        - Other Information
      responses:
        '200':
          description: true or false depending on if the user name exists or not
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "true"
                    example: true
                  result:
                    type: boolean
                    example: true
                required:
                  - success
                  - result
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: findByPortalUserName
                  example: findByPortalUserName
                  description: findByPortalUserName
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
                username:
                  type: string
                  description: Contact portal access user name to search for
                  example: linda@hotmail.com
              required:
                - operation
                - sessionName
                - username
  /getMaxLoadSize:
    post:
      operationId: getMaxLoadSize
      summary: Returns the configured PHP Maximum upload size limit
      tags:
        - Other Information
      responses:
        '200':
          description: return max upload size
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  result:
                    type: integer
                    description: maximum permitted upload size in bytes
                    example: 33554432
                required:
                  - success
                  - result
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                operation:
                  type: string
                  default: getMaxLoadSize
                  example: getMaxLoadSize
                sessionName:
                  type: string
                  example: 1a907f77602a37b70aa5d
                  description: active session ID
              required:
                - operation
                - sessionName
  /getUItype:
    $ref: 'paths/getUItype.yaml#/getUItype'
  /vtyiicpng_getWSEntityId:
    $ref: 'paths/getWSEntityId.yaml#/getWSEntityId'
